<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linjia.web.dao.ActivityPrepareMapper">
  <resultMap id="BaseResultMap" type="com.linjia.web.model.ActivityPrepare">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="activity_start_time" jdbcType="TIMESTAMP" property="activityStartTime" />
    <result column="activity_end_time" jdbcType="TIMESTAMP" property="activityEndTime" />
    <result column="getself_start_time" jdbcType="TIMESTAMP" property="getselfStartTime" />
    <result column="getself_end_time" jdbcType="TIMESTAMP" property="getselfEndTime" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="p_code" jdbcType="VARCHAR" property="pCode" />
    <result column="p_name" jdbcType="VARCHAR" property="pName" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="activity_price" jdbcType="DECIMAL" property="activityPrice" />
    <result column="activity_quantity" jdbcType="INTEGER" property="activityQuantity" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="image_path" jdbcType="VARCHAR" property="imagePath" />
    <result column="sort_index" jdbcType="SMALLINT" property="sortIndex" />
    <result column="cre_date" jdbcType="TIMESTAMP" property="creDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="gettime_type" jdbcType="INTEGER" property="gettimeType" />
    <result column="num_days_later" jdbcType="INTEGER" property="numDaysLater" />
  </resultMap>
  <sql id="Base_Column_List">
    id, activity_start_time, activity_end_time, getself_start_time, getself_end_time, 
    product_id, p_code, p_name, market_price, activity_price, activity_quantity, description, 
    CONCAT('${@com.linjia.constants.Application@SERVER_BASE_PATH}',image_path) AS image_path, sort_index, cre_date, update_date, gettime_type, num_days_later
  </sql>
  <select id="selectByPageList" parameterType="com.linjia.web.query.ActivityPrepareQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from b_activity_prepare
    where 1=1
    AND activity_quantity > 0 
   	<![CDATA[AND activity_start_time <= #{currentTime,jdbcType=TIMESTAMP} AND activity_end_time > #{currentTime,jdbcType=TIMESTAMP}]]>
    order by sort_index desc
    limit #{startIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_activity_prepare
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="countByExample" parameterType="com.linjia.web.model.ActivityPrepare" resultType="java.lang.Integer">
    select count(*) from b_activity_prepare
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.linjia.web.model.ActivityPrepare">
    update b_activity_prepare
    <set>
      <if test="activityStartTime != null">
        activity_start_time = #{activityStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activityEndTime != null">
        activity_end_time = #{activityEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="getselfStartTime != null">
        getself_start_time = #{getselfStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="getselfEndTime != null">
        getself_end_time = #{getselfEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="pCode != null">
        p_code = #{pCode,jdbcType=VARCHAR},
      </if>
      <if test="pName != null">
        p_name = #{pName,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityPrice != null">
        activity_price = #{activityPrice,jdbcType=DECIMAL},
      </if>
      <if test="activityQuantity != null">
        activity_quantity = #{activityQuantity,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null">
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null">
        sort_index = #{sortIndex,jdbcType=INTEGER},
      </if>
      <if test="creDate != null">
        cre_date = #{creDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
   
  <!-- 对预约商品进行减库存操作 -->
  <update id="updateQuantityById" parameterType="map" >
    update b_activity_prepare
    set activity_quantity = activity_quantity - #{buyQty,jdbcType=INTEGER}
    where id = #{activityPrepareId,jdbcType=INTEGER}
  </update>
</mapper>